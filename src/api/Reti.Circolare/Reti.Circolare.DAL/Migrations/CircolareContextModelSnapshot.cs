// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reti.Circolare.DAL;

namespace Reti.Circolare.DAL.Migrations
{
    [DbContext(typeof(CircolareContext))]
    partial class CircolareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Edificio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Disponibile")
                        .HasColumnType("bit");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TBW_Edifici");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Prenotazione", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fine")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inizio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RisorsaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID")
                        .IsUnique();

                    b.HasIndex("RisorsaId");

                    b.HasIndex("SalaId");

                    b.ToTable("TBW_Prenotazioni");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Risorsa", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Abilitato")
                        .HasColumnType("bit");

                    b.Property<string>("Cognome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPersonale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailReti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TBW_Risorse");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EdificioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EdificioId");

                    b.ToTable("TBW_Sale");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Prenotazione", b =>
                {
                    b.HasOne("Reti.Circolare.DAL.Entities.TBW_Risorsa", "Risorsa")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("RisorsaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reti.Circolare.DAL.Entities.TBW_Sala", "Sala")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Risorsa");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Sala", b =>
                {
                    b.HasOne("Reti.Circolare.DAL.Entities.TBW_Edificio", "Edificio")
                        .WithMany("Sale")
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edificio");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Edificio", b =>
                {
                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Risorsa", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("Reti.Circolare.DAL.Entities.TBW_Sala", b =>
                {
                    b.Navigation("Prenotazioni");
                });
#pragma warning restore 612, 618
        }
    }
}
